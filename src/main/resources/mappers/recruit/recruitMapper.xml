<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="recruit">

<!--
========================================================================================================================
                        채용, 채용직무, 채용직무별 자기소개서 항목 INSERT / UPDATE
========================================================================================================================
-->
    <!--채용 입력-->
    <insert id="insertRecruit" parameterType="Recruit" useGeneratedKeys="true" keyProperty="recruitId">
        INSERT INTO t_recruit (
            RECR_ID
            , COMP_ID
            , RECR_NM
            , RECR_IMAGE_NM
            , RECR_BEG_DT
            , RECR_END_DT
            , RECR_WRT_DT
            , RECR_UDT_DT
            , ADMIN_ID
        ) VALUES (
            #{recruitId}
            , #{companyId}
            , #{recruitName}
            , #{recruitImageName}
            , #{recruitBeginDate}
            , #{recruitEndDate}
            , NOW()
            , NOW(),
            #{adminId}
        ) ON DUPLICATE KEY UPDATE
            RECR_NM = #{recruitName}
            <if test="recruitImageName != null">
                , RECR_IMAGE_NM = #{recruitImageName}
            </if>
            , RECR_BEG_DT = #{recruitBeginDate}
            , RECR_END_DT = #{recruitEndDate}
            , RECR_UDT_DT = NOW()
            , ADMIN_ID = #{adminId}
    </insert>

    <!--채용 직무 입력-->
    <insert id="insertRecruitJob" parameterType="RecruitJob" useGeneratedKeys="true" keyProperty="recruitJobId">
        INSERT INTO t_recruit_job (
            RECR_JOB_ID
            , RECR_ID
            , JOB_CATE2_ID
            , RECR_JOB_TYPE
            , RECR_JOB_EDU
            , RECR_JOB_DETAIL
        ) VALUES (
            #{recruitJobId}
            , #{recruitId}
            , #{jobCategory2Id}
            , #{recruitJobType}
            , #{recruitJobEdu}
            , #{recruitJobDetail}
        ) ON DUPLICATE KEY UPDATE
            JOB_CATE2_ID = #{jobCategory2Id}
            , RECR_JOB_TYPE = #{recruitJobType}
            , RECR_JOB_EDU = #{recruitJobEdu}
            , RECR_JOB_DETAIL = #{recruitJobDetail}
    </insert>

    <!--채용 직무별 자기소개서 항목 입력-->
    <insert id="insertCoverLetterArticle" parameterType="CoverLetterArticle" useGeneratedKeys="true" keyProperty="coverLetterArticleId">
        INSERT INTO t_recruit_job_coverletter_article (
            CVLT_ARTICLE_ID
            , RECR_JOB_ID
            , CVLT_ARTICLE_TITLE
        ) VALUES (
            #{coverLetterArticleId}
            , #{recruitJobId}
            , #{coverLetterArticleTitle}
        ) ON DUPLICATE KEY UPDATE
            CVLT_ARTICLE_TITLE = #{coverLetterArticleTitle}
    </insert>

    <!--직무 대분류 목록-->
    <select id="selectJobCategory1s" resultMap="jobCategory1ResultMap">
        SELECT * FROM t_job_category1
    </select>

    <!--직무 소분류 목록-->
    <select id="selectJobCategory2s" resultMap="jobCategory2ResultMap">
        SELECT * FROM t_job_category2
        WHERE JOB_CATE1_ID = #{jobCategory1Id}
    </select>

    <!--채용 목록-->
    <select id="selectRecruits" resultMap="recruitResultMap">
        SELECT
            REC.RECR_ID
            , REC.COMP_ID
            , REC.RECR_NM
            , REC.RECR_BEG_DT
            , REC.RECR_END_DT
            , REC.RECR_WRT_DT
            , REC.RECR_UDT_DT
            , REC.ADMIN_ID
            , CPY.COMP_NM
            , ADM.ADMIN_NICK_NM
        FROM
            t_recruit AS REC
            , t_company AS CPY
            , t_admin AS ADM
        WHERE
            REC.COMP_ID = CPY.COMP_ID
            AND REC.ADMIN_ID = ADM.ADMIN_ID
        ORDER BY REC.RECR_WRT_DT ASC
    </select>


    <!--채용 직무 전체 목록, 현재시간을 기준-->
    <select id="selectRecruitJobs" resultMap="recruitJobResultMap">
        SELECT
            REC.RECR_END_DT
            , RCJ.RECR_JOB_ID
            , RCJ.RECR_ID
            , RCJ.JOB_CATE2_ID
            , RCJ.RECR_JOB_TYPE
            , RCJ.RECR_JOB_EDU
            , RCJ.RECR_JOB_DETAIL
            , JCT1.JOB_CATE1_NM
            , JCT1.JOB_CATE1_ID
            , JCT2.JOB_CATE2_NM
            , CPY.COMP_NM
        FROM
            t_recruit AS REC
            , t_recruit_job AS RCJ
            , t_job_category1 AS JCT1
            , t_job_category2 AS JCT2
            , t_company AS CPY

        WHERE
            RCJ.JOB_CATE2_ID = JCT2.JOB_CATE2_ID
            AND JCT2.JOB_CATE1_ID = JCT1.JOB_CATE1_ID
            AND RCJ.RECR_ID = REC.RECR_ID
            AND CPY.COMP_ID = REC.COMP_ID
            AND REC.RECR_END_DT > NOW()
        ORDER BY REC.RECR_END_DT ASC
    </select>

    <!--채용 달력 검색-->
    <select id="selectRecruitsSearch" parameterType="hashmap" resultMap="recruitResultMap">
        SELECT
            DISTINCT(REC.RECR_ID)
            , REC.RECR_NM
            , REC.RECR_NM
            , REC.RECR_BEG_DT
            , REC.RECR_END_DT
            , RCJ.RECR_JOB_TYPE
            , RCJ.RECR_JOB_EDU
            , CPY.COMP_TYPE
            , CPY.COMP_NM
            , IDC1.INDU_CATE1_ID
            , IDC2.INDU_CATE2_ID
            , IDC1.INDU_CATE1_NM
            , IDC2.INDU_CATE2_NM
            , JOC1.JOB_CATE1_ID
            , JOC2.JOB_CATE2_ID
            , JOC1.JOB_CATE1_NM
            , JOC2.JOB_CATE2_NM
        FROM t_recruit AS REC
            JOIN t_recruit_job RCJ ON REC.RECR_ID = RCJ.RECR_ID
            JOIN t_job_category2 JOC2 ON JOC2.JOB_CATE2_ID = RCJ.JOB_CATE2_ID
            JOIN t_job_category1 JOC1 ON JOC1.JOB_CATE1_ID = JOC2.JOB_CATE1_ID
            JOIN t_company CPY ON REC.COMP_ID = CPY.COMP_ID
            JOIN t_industry_category2 IDC2 ON CPY.INDU_CATE2_ID = IDC2.INDU_CATE2_ID
            JOIN t_industry_category1 IDC1 ON IDC2.INDU_CATE1_ID = IDC1.INDU_CATE1_ID
        <where>
            <if test="recruitJobType != null">
                <foreach collection="recruitJobType" item="recruitJobType" open="RCJ.RECR_JOB_TYPE =" separator="AND">
                  #{recruitJobType}
                </foreach>
            </if>
            <if test="recruitJobEdu != null">
                AND
                <foreach collection="recruitJobEdu" item="recruitJobEdu" open="RCJ.RECR_JOB_EDU = " separator="AND">
                  #{recruitJobEdu}
                </foreach>
            </if>
            <if test="companyType != null">
                AND
                <foreach collection="companyType" item="companyType" open="CPY.COMP_TYPE = " separator="AND">
                  #{companyType}
                </foreach>
            </if>
            <if test="industryCategory1Id != null">
                AND
                <foreach collection="industryCategory1Id" item="industryCategory1Id" open="IDC1.INDU_CATE1_ID = " separator="AND">
                  #{industryCategory1Id}
                </foreach>
            </if>
            <if test="jobCategory1Id != null">
                AND
                <foreach collection="jobCategory1Id" item="jobCategory1Id" open="JOC1.JOB_CATE1_ID =" separator="AND">
                  #{jobCategory1Id}
                </foreach>
            </if>
        </where>
    </select>

    <!--채용 상세-->
    <select id="selectRecruitByRecruitId" resultMap="recruitResultMap">
        SELECT
            REC.RECR_ID
            , REC.COMP_ID
            , REC.RECR_NM
            , REC.RECR_IMAGE_NM
            , REC.RECR_BEG_DT
            , REC.RECR_END_DT
            , REC.RECR_WRT_DT
            , REC.RECR_UDT_DT
            , REC.ADMIN_ID
            , CPY.COMP_NM
            , ADM.ADMIN_NICK_NM
        FROM
            t_recruit AS REC
            , t_company AS CPY
            , t_admin AS ADM
        WHERE
            REC.COMP_ID = CPY.COMP_ID
            AND REC.ADMIN_ID = ADM.ADMIN_ID
            AND RECR_ID = #{recruitId}
    </select>

    <!--채용직무-->
    <select id="selectRecruitJobByRecruitJobId" resultMap="recruitJobResultMap">
        SELECT
            REJ.RECR_JOB_ID
            , REJ.RECR_ID
            , REJ.JOB_CATE2_ID
            , REJ.RECR_JOB_TYPE
            , REJ.RECR_JOB_EDU
            , REJ.RECR_JOB_DETAIL
            , JC1.JOB_CATE1_NM
            , JC2.JOB_CATE2_NM
        FROM
            t_recruit_job AS REJ
            , t_job_category1 AS JC1
            , t_job_category2 AS JC2
        WHERE
            JC2.JOB_CATE2_ID = REJ.JOB_CATE2_ID
            AND JC1.JOB_CATE1_ID = JC2.JOB_CATE1_ID
            AND REJ.RECR_JOB_ID = #{recruitJobId}
    </select>

    <!--채용직무 목록-->
    <select id="selectRecruitJobsByRecruitId" resultMap="recruitJobResultMap">
        SELECT
            RECJ.RECR_JOB_ID
            , RECJ.RECR_ID
            , RECJ.JOB_CATE2_ID
            , RECJ.RECR_JOB_TYPE
            , RECJ.RECR_JOB_EDU
            , RECJ.RECR_JOB_DETAIL
            , JCT1.JOB_CATE1_NM
            , JCT1.JOB_CATE1_ID
            , JCT2.JOB_CATE2_NM
        FROM
            t_recruit_job AS RECJ
            , t_job_category1 AS JCT1
            , t_job_category2 AS JCT2
        WHERE
            RECJ.JOB_CATE2_ID = JCT2.JOB_CATE2_ID
            AND JCT2.JOB_CATE1_ID = JCT1.JOB_CATE1_ID
            AND RECJ.RECR_ID = #{recruitId}
    </select>

    <!--채용직무별 자소서항목 목록-->
    <select id="selectCoverLetterArticlesByRecruitJobId" resultMap="coverLetterArticleResultMap">
        SELECT
            CVLT_ARTICLE_ID
            , RECR_JOB_ID
            , CVLT_ARTICLE_TITLE
        FROM t_recruit_job_coverletter_article
        WHERE RECR_JOB_ID = #{recruitJobId}
    </select>

    <!--채용 수정-->
    <update id="updateRecruit">
        UPDATE t_recruit
        SET
            RECR_NM = #{recruitName}
            , RECR_BEG_DT = #{recruitBeginDate}
            , RECR_END_DT = #{recruitEndDate}
            , RECR_UDT_DT = NOW()
            , ADMIN_ID = #{adminId}
        WHERE RECR_ID = #{recruitId}
    </update>

    <!--채용 삭제-->
    <delete id="deleteRecruit">
        DELETE FROM
            t_recruit
        WHERE RECR_ID = #{recruitId}
    </delete>

    <!--채용직무 수정-->
    <update id="updateRecruitJob">

        UPDATE t_recruit_job
        SET
            JOB_CATE2_ID = #{jobCategory2Id}
            , RECR_JOB_TYPE = #{recruitJobType}
            , RECR_JOB_EDU = #{recruitJobEdu}
            , RECR_JOB_DETAIL = #{recruitJobDetail}
        WHERE RECR_JOB_ID = #{recruitJobId}

    </update>

    <!--채용 직무별 자기소개서 항목 일괄 삭제-->
    <delete id="deleteCoverLetterArticles" parameterType="int">

        DELETE FROM
            t_recruit_job_coverletter_article
        WHERE RECR_JOB_ID = #{recruitJobId}

    </delete>

    <!--채용 직무별 자기소개서 항목 삭제-->
    <delete id="deleteCoverLetterArticle" parameterType="int">

        DELETE FROM
        t_recruit_job_coverletter_article
        WHERE CVLT_ARTICLE_ID = #{coverLetterArticleId}

    </delete>

    <!--채용 직무 삭제-->
    <delete id="deleteRecruitJob" parameterType="int">

        DELETE RECJ, CVLT
        FROM t_recruit_job AS RECJ
            LEFT JOIN t_recruit_job_coverletter_article AS CVLT
                ON RECJ.RECR_JOB_ID = CVLT.RECR_JOB_ID
        WHERE RECJ.RECR_JOB_ID = #{recruitJobId}

    </delete>


    <!--채용 이미지 파일명-->
    <select id="selectRecruitImageName" parameterType="int" resultType="String">
        SELECT
            RECR_IMAGE_NM
        FROM
            t_recruit
        WHERE
            RECR_ID = #{recruitId}
    </select>

    <!-- ==== ResultMaps ==== -->


    <!--채용 resultMap-->
    <resultMap id="recruitResultMap" type="Recruit">
        <id column="RECR_ID" property="recruitId"/>
        <result column="RECR_NM" property="recruitName"/>
        <result column="RECR_IMAGE_NM" property="recruitImageName"/>
        <result column="RECR_BEG_DT" property="recruitBeginDate"/>
        <result column="RECR_END_DT" property="recruitEndDate"/>
        <result column="RECR_WRT_DT" property="recruitWriteDate"/>
        <result column="RECR_UDT_DT" property="recruitUpdateDate"/>
        <result column="COMP_ID" property="companyId"/>
        <result column="ADMIN_ID" property="adminId"/>
        <association property="company" resultMap="companyResultMap"/>
        <association property="admin" resultMap="adminResultMap"/>
        <collection property="recruitJobs"
                    javaType="java.util.ArrayList"
                    column="RECR_ID"
                    ofType="RecruitJob"
                    select="selectRecruitJobsByRecruitId"
        />

    </resultMap>

    <!--채용직무 resultMap-->
    <resultMap id="recruitJobResultMap" type="RecruitJob">
        <id column="RECR_JOB_ID" property="recruitJobId"/>
        <result column="RECR_JOB_TYPE" property="recruitJobType"/>
        <result column="RECR_JOB_EDU" property="recruitJobEdu"/>
        <result column="RECR_JOB_DETAIL" property="recruitJobDetail"/>
        <result column="RECR_ID" property="recruitId"/>
        <result column="JOB_CATE2_ID" property="jobCategory2Id"/>
        <association property="recruit" resultMap="recruitResultMap"/>
        <association property="jobCategory2" resultMap="jobCategory2ResultMap"/>
        <collection property="coverLetterArticles"
                    javaType="java.util.ArrayList"
                    column="RECR_JOB_ID"
                    ofType="CoverLetterArticle"
                    select="selectCoverLetterArticlesByRecruitJobId"
        />
    </resultMap>

    <!--채용직무별자소서항목 resultMap-->
    <resultMap id="coverLetterArticleResultMap" type="CoverLetterArticle">
        <id column="CVLT_ARTICLE_ID" property="coverLetterArticleId"/>
        <result column="CVLT_ARTICLE_TITLE" property="coverLetterArticleTitle"/>
        <result column="RECR_JOB_ID" property="recruitJobId"/>
        <association property="recruitJob" resultMap="recruitJobResultMap"/>
    </resultMap>

    <!--직무 대분류 resultMap-->
    <resultMap id="jobCategory1ResultMap" type="JobCategory1">
        <id column="JOB_CATE1_ID" property="jobCategory1Id"/>
        <result column="JOB_CATE1_NM" property="jobCategory1Name"/>
    </resultMap>

    <!--직무 소분류 resultMap-->
    <resultMap id="jobCategory2ResultMap" type="JobCategory2">
        <id column="JOB_CATE2_ID" property="jobCategory2Id"/>
        <result column="JOB_CATE2_NM" property="jobCategory2Name"/>
        <result column="JOB_CATE1_ID" property="jobCategory1Id"/>
        <association property="jobCategory1" resultMap="jobCategory1ResultMap"/>
    </resultMap>

    <!--기업 resultMap-->
    <resultMap id="companyResultMap" type="Company">
        <id column="COMP_ID" property="companyId"/>
        <result column="COMP_NM" property="companyName"/>
        <result column="COMP_TYPE" property="companyType"/>
        <result column="COMP_HOMEPAGE" property="companyHomePage"/>
        <result column="COMP_BIRTH_DT" property="companyBirthDate" javaType="java.sql.Date"/>
        <result column="COMP_ADDR" property="companyAddress"/>
        <result column="COMP_CEO" property="companyCeo"/>
        <result column="COMP_PHONE" property="companyPhone"/>
        <result column="COMP_PHOTO_URL" property="companyPhotoUrl"/>
        <result column="COMP_SALES" property="companySales"/>
        <result column="COMP_REG_DT" property="companyRegisterDate"/>
        <result column="COMP_UDT_DT" property="companyUpdateDate"/>
        <result column="INDU_CATE2_ID" property="industryCategory2Id"/>
        <result column="ADMIN_ID" property="adminId"/>
        <association property="admin" resultMap="adminResultMap"/>
        <association property="industryCategory2" resultMap="industryCategory2ResultMap"/>
    </resultMap>

    <!--관리자 resultMap-->
    <resultMap id="adminResultMap" type="Admin">

        <id column="ADMIN_ID" property="adminId"/>

        <result column="ADMIN_EMAIL" property="adminEmail"/>
        <result column="ADMIN_NICK_NM" property="adminNickName"/>
        <result column="ADMIN_PW" property="adminPassword"/>
        <result column="ADMIN_JN_DT" property="adminJoinDate"/>
        <result column="ADMIN_UDT_DT" property="adminUpdateDate"/>
        <result column="ADMIN_LOG_DT" property="adminLoginDate"/>

    </resultMap>

    <!--업종 대분류 resultMap-->
    <resultMap id="industryCategory1ResultMap" type="IndustryCategory1">

        <id column="INDU_CATE1_ID" property="industryCategory1Id"/>

        <result column="INDU_CATE1_NM" property="industryCategory1Name"/>
    </resultMap>

    <!--업종 소분류 resultMap-->
    <resultMap id="industryCategory2ResultMap" type="IndustryCategory2">

        <id column="INDU_CATE2_ID" property="industryCategory2Id"/>

        <result column="INDU_CATE1_ID" property="industryCategory1Id"/>
        <result column="INDU_CATE2_NM" property="industryCategory2Name"/>

        <association property="industryCategory1" resultMap="industryCategory1ResultMap"/>

    </resultMap>

</mapper>














